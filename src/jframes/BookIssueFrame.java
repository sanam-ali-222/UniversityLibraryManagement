/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jframes;

import beanclasses.*;
import dbmanager.DatabaseManager;
import java.awt.*;       // Toolkit, Dimension
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 * @author Amjad Jamali
 */
public class BookIssueFrame extends javax.swing.JFrame {

    public BookIssueFrame() {
        initComponents();
        Toolkit kit=this.getToolkit();
        Dimension d=kit.getScreenSize();
        setBounds(0,0,d.width, d.height);
        getAllDepartments();
        getDateOfIssued();
    }    
    private void getAllDepartments(){
        try{
            
            Vector v = DatabaseManager.getAllDepartments();
            this.departmentComboBoxUpper.removeAllItems();
            this.departmentComboBoxLower.removeAllItems();
            
            for( int i=0; i<v.size(); i++ )
                this.departmentComboBoxUpper.addItem(v.elementAt(i));
            for( int i=0; i<v.size(); i++ )
                this.departmentComboBoxLower.addItem(v.elementAt(i));
            
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"ERROR: "+ex );
        }
    }
    private void getDateOfIssued(){
        try{
            Vector v = DatabaseManager.getBookIssued();
            this.dateOfIssuedList.setListData(v);
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"ERROR: "+ex );
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        departmentComboBoxUpper = new javax.swing.JComboBox();
        booksComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        editionField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        departmentComboBoxLower = new javax.swing.JComboBox();
        programComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        batchComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        groupField = new javax.swing.JTextField();
        rollNoComboBox = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        surnameField = new javax.swing.JTextField();
        fNameField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        publishYearField = new javax.swing.JTextField();
        priceField = new javax.swing.JTextField();
        autherField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        issuedIdField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        dateOfReturnField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        finePanalityField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        remarksArea = new javax.swing.JTextArea();
        update = new javax.swing.JButton();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dateOfIssuedList = new javax.swing.JList();
        dateOfIssuedField = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        departmentComboBoxUpper.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        departmentComboBoxUpper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentComboBoxUpperActionPerformed(evt);
            }
        });
        getContentPane().add(departmentComboBoxUpper);
        departmentComboBoxUpper.setBounds(180, 60, 340, 40);

        booksComboBox.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        booksComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booksComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(booksComboBox);
        booksComboBox.setBounds(180, 110, 340, 40);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 600, 60, 30);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Edition");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(320, 160, 70, 40);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Price");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(340, 210, 50, 40);

        editionField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(editionField);
        editionField.setBounds(390, 160, 130, 40);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setText("Father Name");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 650, 120, 30);

        nameField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(nameField);
        nameField.setBounds(180, 600, 340, 40);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setText("Books");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(60, 110, 60, 30);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setText("Deprtments");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(60, 60, 110, 30);

        departmentComboBoxLower.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        departmentComboBoxLower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentComboBoxLowerActionPerformed(evt);
            }
        });
        getContentPane().add(departmentComboBoxLower);
        departmentComboBoxLower.setBounds(180, 350, 340, 40);

        programComboBox.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        programComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(programComboBox);
        programComboBox.setBounds(180, 400, 340, 40);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setText("Program");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(60, 400, 80, 30);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setText("Deprtments");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(60, 350, 110, 30);

        batchComboBox.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        batchComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batchComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(batchComboBox);
        batchComboBox.setBounds(180, 480, 150, 40);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setText("Batch");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(60, 480, 100, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setText("Group");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(360, 450, 110, 30);

        groupField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(groupField);
        groupField.setBounds(360, 480, 160, 40);

        rollNoComboBox.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        rollNoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollNoComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(rollNoComboBox);
        rollNoComboBox.setBounds(180, 540, 340, 40);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setText("Roll No");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(60, 540, 80, 30);

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setText("Surname");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(60, 700, 80, 30);

        surnameField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(surnameField);
        surnameField.setBounds(180, 700, 340, 40);

        fNameField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(fNameField);
        fNameField.setBounds(180, 650, 340, 40);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setText("Publish Year");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(60, 160, 120, 30);

        jLabel15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel15.setText("Auther");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(60, 210, 70, 30);

        publishYearField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(publishYearField);
        publishYearField.setBounds(180, 160, 130, 40);

        priceField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(priceField);
        priceField.setBounds(390, 210, 130, 40);

        autherField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(autherField);
        autherField.setBounds(180, 210, 130, 40);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel16.setText("Issued ID");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(750, 60, 90, 30);

        jLabel17.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel17.setText("Dates Of Issued ");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(1260, 60, 200, 30);

        issuedIdField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(issuedIdField);
        issuedIdField.setBounds(900, 60, 120, 40);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel18.setText("Date Of Return");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(750, 190, 140, 30);

        dateOfReturnField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(dateOfReturnField);
        dateOfReturnField.setBounds(900, 180, 290, 40);

        jLabel19.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel19.setText("Remarks");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(750, 350, 110, 30);

        finePanalityField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(finePanalityField);
        finePanalityField.setBounds(900, 240, 290, 40);

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setText("Fine Panality Rs.");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(750, 250, 160, 30);

        remarksArea.setColumns(20);
        remarksArea.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        remarksArea.setRows(5);
        jScrollPane1.setViewportView(remarksArea);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(750, 390, 440, 250);

        update.setFont(new java.awt.Font("Gazzarelli", 1, 22)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(900, 690, 140, 50);

        add.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(750, 690, 140, 50);

        delete.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(1050, 690, 140, 50);

        dateOfIssuedList.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        dateOfIssuedList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                dateOfIssuedListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(dateOfIssuedList);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(1260, 100, 250, 540);

        dateOfIssuedField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(dateOfIssuedField);
        dateOfIssuedField.setBounds(900, 120, 290, 40);

        jLabel21.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel21.setText("Date Of Issued ");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(750, 130, 140, 30);

        back.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(1260, 690, 250, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void departmentComboBoxUpperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentComboBoxUpperActionPerformed
        getBooks();
    }//GEN-LAST:event_departmentComboBoxUpperActionPerformed
    private void getBooks(){
        try{
            DepartmentBean bean=(DepartmentBean)this.departmentComboBoxUpper.getSelectedItem();
            if(bean==null)return;
            
            Vector v = DatabaseManager.getBooks(bean.getDeptId());
            this.booksComboBox.removeAllItems();
            
            for( int i=0; i<v.size(); i++ )
                this.booksComboBox.addItem(v.elementAt(i));
          
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"ERROR: "+ex );
        }
    }


    private void booksComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booksComboBoxActionPerformed
        BooksBean bean = (BooksBean) booksComboBox.getSelectedItem();
        if(bean==null)return;
       
        this.publishYearField.setText(""+bean.getYearOfPublish());
        this.editionField.setText(""+bean.getEditionVolume());
        this.autherField.setText(""+bean.getAutherEditor());
        this.priceField.setText(""+bean.getPrice());
    }//GEN-LAST:event_booksComboBoxActionPerformed

    
    private void departmentComboBoxLowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentComboBoxLowerActionPerformed
        getPrograms();
    }//GEN-LAST:event_departmentComboBoxLowerActionPerformed
    private void getPrograms(){
        try{
            DepartmentBean bean=(DepartmentBean)this.departmentComboBoxLower.getSelectedItem();
            if(bean==null)return;
            Vector v = DatabaseManager.getPrograms(bean.getDeptId());
            this.programComboBox.removeAllItems();
            
            for( int i=0; i<v.size(); i++ )
                this.programComboBox.addItem(v.elementAt(i));
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"ERROR: "+ex );
        }
    }


    private void programComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programComboBoxActionPerformed
        getBatches();
    }//GEN-LAST:event_programComboBoxActionPerformed
    private void getBatches(){
        try{
            ProgramBean bean=(ProgramBean)this.programComboBox.getSelectedItem();
            if(bean==null)return;
            Vector v = DatabaseManager.getBatches(bean.getProgId());
            this.batchComboBox.removeAllItems();

            for( int i=0; i<v.size(); i++ )
                this.batchComboBox.addItem(v.elementAt(i));
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"ERROR: "+ex );
        }
    }


    private void batchComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batchComboBoxActionPerformed
        getStudents();
    }//GEN-LAST:event_batchComboBoxActionPerformed
    private void getStudents(){
        try{
            BatchBean bean=(BatchBean)this.batchComboBox.getSelectedItem();
            if(bean==null)return;

            this.groupField.setText(bean.getGroupDesc());
            
            
            Vector v = DatabaseManager.getStudents(bean.getBatchId());
            this.rollNoComboBox.removeAllItems();

            for( int i=0; i<v.size(); i++ )
                this.rollNoComboBox.addItem(v.elementAt(i));
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"ERROR: "+ex );
        }
    }
    

    private void rollNoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollNoComboBoxActionPerformed
        StudentBean bean = (StudentBean) rollNoComboBox.getSelectedItem();
        if(bean==null)return;
       
        this.nameField.setText(""+bean.getStdName());
        this.fNameField.setText(""+bean.getFName());
        this.surnameField.setText(""+bean.getSurname());
    }//GEN-LAST:event_rollNoComboBoxActionPerformed

    
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        BookIssueBean bean=(BookIssueBean)this.dateOfIssuedList.getSelectedValue();

        String dateOfIssued=this.dateOfIssuedField.getText();
        String dateOfReturn=this.dateOfReturnField.getText();
        String fine=this.finePanalityField.getText();int finePanality = Integer.parseInt(fine);
        String remarks=remarksArea.getText();

        if(dateOfIssued.trim().equals("")){
           JOptionPane.showMessageDialog(this, "Student Name TextField is Empty. ");
           return;        
        }
        if(dateOfReturn.trim().equals("")){
           JOptionPane.showMessageDialog(this, "Father Name TextField is Empty. ");
           return;        
        }
        if(fine.trim().equals("")){
           JOptionPane.showMessageDialog(this, "Surname TextField is Empty. ");
           return;        
        }
        try{
             int rows=DatabaseManager.updateBookIssued(bean.getIssuedId(), bean.getBookId(), bean.getStdId(), dateOfIssued, dateOfReturn, finePanality, remarks);
             if(rows>=1){
                 JOptionPane.showMessageDialog(this, rows+" record modified. ");
                 getDateOfIssued();
             }
        }catch(Exception ee){
           ee.printStackTrace();
           JOptionPane.showMessageDialog(this,"Error: "+ee.getMessage());
        } 
    }//GEN-LAST:event_updateActionPerformed

    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        BooksBean bbean=(BooksBean)this.booksComboBox.getSelectedItem();
        StudentBean sbean=(StudentBean)this.rollNoComboBox.getSelectedItem();

        String dateOfIssued = this.dateOfIssuedField.getText();
        String dateOfReturn = this.dateOfReturnField.getText();
        String fine = this.finePanalityField.getText(); int finePanality = Integer.parseInt(fine);
        String remarks=remarksArea.getText();

        if(dateOfIssued.trim().equals("")){
           JOptionPane.showMessageDialog(this, "Date Of Issue TextField is Empty. ");
           return;        
        }
        if(dateOfReturn.trim().equals("")){
           JOptionPane.showMessageDialog(this, "Date Of Return TextField is Empty. ");
           return;        
        }
        if(fine.trim().equals("")){
           JOptionPane.showMessageDialog(this, "Fine Panality TextField is Empty. ");
           return;        
        }
        try{
             int rows=DatabaseManager.addBookIssued(bbean.getBookId(),sbean.getStdId(), dateOfIssued, dateOfReturn,finePanality, remarks);
             if(rows>=1){
                 JOptionPane.showMessageDialog(this, rows+" record saved. ");
                 getDateOfIssued();
             }
        }catch(Exception ee){
           ee.printStackTrace();
           JOptionPane.showMessageDialog(this,"Error: "+ee.getMessage());
        }
    }//GEN-LAST:event_addActionPerformed

    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        BookIssueBean bean=(BookIssueBean)this.dateOfIssuedList.getSelectedValue();
        if(bean==null)return;
        
        try{
            int rows=DatabaseManager.deleteBookIssued(bean.getIssuedId());
            if(rows>=1){
                 javax.swing.JOptionPane.showMessageDialog(this, rows+" record removed. ");
                 getDateOfIssued();
             }
        }catch(Exception ee){
           ee.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this,"Error: "+ee.getMessage());
        }
    }//GEN-LAST:event_deleteActionPerformed

    
    private void dateOfIssuedListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_dateOfIssuedListValueChanged
        BookIssueBean bean = (BookIssueBean) dateOfIssuedList.getSelectedValue();
        if(bean==null)return;
       
        try {
            this.issuedIdField.setText(""+bean.getIssuedId());
            this.dateOfIssuedField.setText(""+bean.getDateOfIssue());
            this.dateOfReturnField.setText(""+bean.getDateOfReturn());
            this.finePanalityField.setText(""+bean.getFinePanalityAmount());
            this.remarksArea.setText(""+bean.getRemarks()); 
       
            BooksBean bbean = DatabaseManager.getBook(bean.getBookId());
            booksComboBox.removeAllItems();
            booksComboBox.addItem(bbean);

            StudentBean sbean = DatabaseManager.getStudent(bean.getStdId());
            rollNoComboBox.removeAllItems();
            rollNoComboBox.addItem(sbean);

        } catch (Exception ex) {
           ex.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this,"Error: "+ex.getMessage());
        }
    }//GEN-LAST:event_dateOfIssuedListValueChanged

    
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        hide();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookIssueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookIssueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookIssueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookIssueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookIssueFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField autherField;
    private javax.swing.JButton back;
    private javax.swing.JComboBox batchComboBox;
    private javax.swing.JComboBox booksComboBox;
    private javax.swing.JTextField dateOfIssuedField;
    private javax.swing.JList dateOfIssuedList;
    private javax.swing.JTextField dateOfReturnField;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox departmentComboBoxLower;
    private javax.swing.JComboBox departmentComboBoxUpper;
    private javax.swing.JTextField editionField;
    private javax.swing.JTextField fNameField;
    private javax.swing.JTextField finePanalityField;
    private javax.swing.JTextField groupField;
    private javax.swing.JTextField issuedIdField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField priceField;
    private javax.swing.JComboBox programComboBox;
    private javax.swing.JTextField publishYearField;
    private javax.swing.JTextArea remarksArea;
    private javax.swing.JComboBox rollNoComboBox;
    private javax.swing.JTextField surnameField;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
