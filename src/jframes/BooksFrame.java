package jframes;

import beanclasses.*;
import dbmanager.DatabaseManager;
import java.awt.*;
import java.util.Vector;
import javax.swing.JOptionPane;

/** 
 * @author Amjad Jamali
 */
public class BooksFrame extends javax.swing.JFrame {
    public BooksFrame() {
        initComponents();
        Toolkit kit=this.getToolkit();
        Dimension d=kit.getScreenSize();
        setBounds(0,0,d.width, d.height);
        getAllDepartments();
        getBookTypes();
    }
    private void getAllDepartments(){
        try{
            
            Vector v = DatabaseManager.getAllDepartments();
            this.departmentComboBox.removeAllItems();
            
            for( int i=0; i<v.size(); i++ )
                this.departmentComboBox.addItem(v.elementAt(i));
            
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"ERROR: "+ex );
        }
    }
    private void getBookTypes(){
        try{
            Vector v = DatabaseManager.getBookTypes();
            this.bookTypeComboBox.removeAllItems();
            
            for( int i=0; i<v.size(); i++ )
                this.bookTypeComboBox.addItem(v.elementAt(i));
          
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"ERROR: "+ex );
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookNames = new javax.swing.JLabel();
        remarks = new javax.swing.JLabel();
        depts = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookNameList = new javax.swing.JList();
        departmentComboBox = new javax.swing.JComboBox();
        update = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        remarksArea = new javax.swing.JTextArea();
        add = new javax.swing.JButton();
        bookName = new javax.swing.JLabel();
        bookId = new javax.swing.JLabel();
        publisher = new javax.swing.JLabel();
        bookTypeComboBox = new javax.swing.JComboBox();
        faculties = new javax.swing.JLabel();
        bookIdField = new javax.swing.JTextField();
        bookNameField = new javax.swing.JTextField();
        publisherField = new javax.swing.JTextField();
        author = new javax.swing.JLabel();
        authorField = new javax.swing.JTextField();
        adition = new javax.swing.JLabel();
        price = new javax.swing.JLabel();
        editionField = new javax.swing.JTextField();
        priceField = new javax.swing.JTextField();
        isbn = new javax.swing.JLabel();
        isbnField = new javax.swing.JTextField();
        bookName2 = new javax.swing.JLabel();
        purchaseFrom = new javax.swing.JLabel();
        publishingYearField = new javax.swing.JTextField();
        purchaseFromField = new javax.swing.JTextField();
        accessNo = new javax.swing.JLabel();
        accessNoField = new javax.swing.JTextField();
        quantity = new javax.swing.JLabel();
        quantityField = new javax.swing.JTextField();
        purchaseDate = new javax.swing.JLabel();
        purchaseDateField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        bookNames.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        bookNames.setText("Book Names");
        getContentPane().add(bookNames);
        bookNames.setBounds(1100, 40, 150, 28);

        remarks.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        remarks.setText("Remarks");
        getContentPane().add(remarks);
        remarks.setBounds(350, 490, 110, 28);

        depts.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        depts.setText("Department");
        getContentPane().add(depts);
        depts.setBounds(350, 70, 140, 28);

        delete.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(830, 720, 150, 60);

        clear.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear);
        clear.setBounds(670, 720, 150, 60);

        back.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(1010, 720, 300, 60);

        bookNameList.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bookNameList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                bookNameListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(bookNameList);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(1010, 70, 300, 640);

        departmentComboBox.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        departmentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(departmentComboBox);
        departmentComboBox.setBounds(540, 70, 430, 37);

        update.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(510, 720, 150, 60);

        remarksArea.setColumns(20);
        remarksArea.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        remarksArea.setRows(5);
        jScrollPane2.setViewportView(remarksArea);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(350, 530, 630, 180);

        add.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(350, 720, 150, 60);

        bookName.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        bookName.setText("Book Name");
        getContentPane().add(bookName);
        bookName.setBounds(350, 190, 131, 28);

        bookId.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        bookId.setText("Book ID");
        getContentPane().add(bookId);
        bookId.setBounds(350, 150, 129, 28);

        publisher.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        publisher.setText("Publisher");
        getContentPane().add(publisher);
        publisher.setBounds(350, 230, 130, 28);

        bookTypeComboBox.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bookTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookTypeComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(bookTypeComboBox);
        bookTypeComboBox.setBounds(540, 110, 430, 35);

        faculties.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        faculties.setText("Book Type");
        getContentPane().add(faculties);
        faculties.setBounds(350, 110, 130, 28);

        bookIdField.setEditable(false);
        bookIdField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(bookIdField);
        bookIdField.setBounds(540, 150, 230, 36);

        bookNameField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(bookNameField);
        bookNameField.setBounds(540, 190, 430, 37);

        publisherField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(publisherField);
        publisherField.setBounds(540, 230, 430, 37);

        author.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        author.setText("Editor/Author");
        getContentPane().add(author);
        author.setBounds(350, 270, 160, 28);

        authorField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(authorField);
        authorField.setBounds(540, 270, 430, 37);

        adition.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        adition.setText("Edition Volume");
        getContentPane().add(adition);
        adition.setBounds(350, 320, 180, 28);

        price.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        price.setText("Price");
        getContentPane().add(price);
        price.setBounds(350, 360, 70, 28);

        editionField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(editionField);
        editionField.setBounds(540, 320, 110, 37);

        priceField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(priceField);
        priceField.setBounds(540, 360, 110, 37);

        isbn.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        isbn.setText("ISBN");
        getContentPane().add(isbn);
        isbn.setBounds(350, 400, 160, 28);

        isbnField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(isbnField);
        isbnField.setBounds(540, 400, 110, 37);

        bookName2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        bookName2.setText("Publishing Year");
        getContentPane().add(bookName2);
        bookName2.setBounds(670, 320, 200, 28);

        purchaseFrom.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        purchaseFrom.setText("Purchase From");
        getContentPane().add(purchaseFrom);
        purchaseFrom.setBounds(670, 360, 190, 28);

        publishingYearField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(publishingYearField);
        publishingYearField.setBounds(860, 320, 110, 37);

        purchaseFromField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(purchaseFromField);
        purchaseFromField.setBounds(860, 360, 110, 37);

        accessNo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        accessNo.setText("Access No");
        getContentPane().add(accessNo);
        accessNo.setBounds(670, 400, 140, 28);

        accessNoField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(accessNoField);
        accessNoField.setBounds(860, 400, 110, 37);

        quantity.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        quantity.setText("Quantity");
        getContentPane().add(quantity);
        quantity.setBounds(350, 440, 160, 28);

        quantityField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(quantityField);
        quantityField.setBounds(540, 440, 110, 37);

        purchaseDate.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        purchaseDate.setText("Purchase Date");
        getContentPane().add(purchaseDate);
        purchaseDate.setBounds(670, 440, 180, 28);

        purchaseDateField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(purchaseDateField);
        purchaseDateField.setBounds(860, 440, 110, 37);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        BooksBean bean=(BooksBean)this.bookNameList.getSelectedValue();
        if(bean==null)return;
        
        try{
            int rows=DatabaseManager.deleteBook(bean.getBookId());
            if(rows>=1){
                 javax.swing.JOptionPane.showMessageDialog(this, rows+" record removed. ");
                 getBookNames();
                 clearActionPerformed(evt);                                      
             }
        }catch(Exception ee){
           ee.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this,"Error: "+ee.getMessage());
        }
    }//GEN-LAST:event_deleteActionPerformed

    
    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        this.bookIdField.setText("");
        this.bookNameField.setText("");
        this.publisherField.setText("");
        this.authorField.setText("");
        this.editionField.setText("");
        this.publishingYearField.setText("");
        this.priceField.setText("");
        this.purchaseFromField.setText("");
        this.isbnField.setText("");
        this.accessNoField.setText("");
        this.quantityField.setText("");
        this.purchaseDateField.setText("");                
        this.remarksArea.setText("");
    }//GEN-LAST:event_clearActionPerformed


    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        hide();
    }//GEN-LAST:event_backActionPerformed


    private void bookNameListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_bookNameListValueChanged
        BooksBean bean = (BooksBean) bookNameList.getSelectedValue();
        if(bean==null)return;
        
        this.bookIdField.setText(""+bean.getBookId());
        this.bookNameField.setText(""+bean.getBookName());
        this.publisherField.setText(""+bean.getPublisher());
        this.authorField.setText(""+bean.getAutherEditor());
        this.editionField.setText(""+bean.getEditionVolume());
        this.publishingYearField.setText(""+bean.getYearOfPublish());
        this.priceField.setText(""+bean.getPrice());
        this.purchaseFromField.setText(""+bean.getPurchaseFrom());
        this.isbnField.setText(""+bean.getISBN());
        this.accessNoField.setText(""+bean.getAccessNo());
        this.quantityField.setText(""+bean.getQuantity());
        this.purchaseDateField.setText(""+bean.getDateOfPurchase());                
        this.remarksArea.setText(""+bean.getRemarks());
    }//GEN-LAST:event_bookNameListValueChanged

    
    private void departmentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentComboBoxActionPerformed
      this.getBookNames();
    }//GEN-LAST:event_departmentComboBoxActionPerformed
    private void getBookNames(){
        try{
            DepartmentBean depbean=(DepartmentBean)this.departmentComboBox.getSelectedItem();
            BookTypeBean btbean=(BookTypeBean)this.bookTypeComboBox.getSelectedItem();
            if(depbean==null || btbean==null)return;        
            Vector v = DatabaseManager.getBooks(btbean.getTypeId(), depbean.getDeptId());
            this.bookNameList.setListData(v);

        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"ERROR:getBookName "+ex );
        }
    }
    
    
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        BooksBean bean = (BooksBean) bookNameList.getSelectedValue();
        if(bean==null)return;
        
        String bookName = this.bookNameField.getText();
        String publisher =  this.publisherField.getText();
        String autherEditor =  this.authorField.getText();
        String editionVolume =  this.editionField.getText();
        String yearOfPublish =  this.publishingYearField.getText();
        String p =  this.priceField.getText(); int price = Integer.parseInt(p); 
        String purchaseFrom =  this.purchaseFromField.getText();
        String isbn =  this.isbnField.getText();
        String accessNo =  this.accessNoField.getText();
        String q =  this.quantityField.getText(); int quantity = Integer.parseInt(q);
        String dateOfPurchase =  this.purchaseDateField.getText();                
        String remarks =  this.remarksArea.getText();
                               
        if(bookName.trim().equals("")){
           javax.swing.JOptionPane.showMessageDialog(this, "Book Name TextField is Empty. ");
           return;        
        }        
        try{        
             int rows=DatabaseManager.updateBook(bean.getBookId(), bean.getTypeId(), bean.getDeptId(), bookName, publisher, autherEditor, editionVolume, yearOfPublish, price, purchaseFrom, isbn, accessNo, quantity, dateOfPurchase, remarks);
             if(rows>=1){
                 javax.swing.JOptionPane.showMessageDialog(this, rows+" record modified. ");
                 getBookNames();
                 clearActionPerformed(evt);                                      
             }
        }catch(Exception ee){
           ee.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this,"Error: "+ee.getMessage());
        }
    }//GEN-LAST:event_updateActionPerformed

    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        DepartmentBean deptBean=(DepartmentBean)this.departmentComboBox.getSelectedItem();
        BookTypeBean bookBean = (BookTypeBean) bookTypeComboBox.getSelectedItem();
        if(bookBean==null || deptBean==null)return;
                
        String bookName = this.bookNameField.getText();
        String publisher =  this.publisherField.getText();
        String autherEditor =  this.authorField.getText();
        String editionVolume =  this.editionField.getText();
        String yearOfPublish =  this.publishingYearField.getText();
        String p =  this.priceField.getText(); int price = Integer.parseInt(p); 
        String purchaseFrom =  this.purchaseFromField.getText();
        String isbn =  this.isbnField.getText();
        String accessNo =  this.accessNoField.getText();
        String q =  this.quantityField.getText(); int quantity = Integer.parseInt(q);
        String dateOfPurchase =  this.purchaseDateField.getText();                
        String remarks =  this.remarksArea.getText();
                          
        if(bookName.trim().equals("")){
           javax.swing.JOptionPane.showMessageDialog(this, "Book Name TextField is Empty. ");
           return;        
        }        
        try{        
             int rows=DatabaseManager.addBook(bookBean.getTypeId(), deptBean.getDeptId(), bookName, publisher, autherEditor, editionVolume, yearOfPublish, price, purchaseFrom, isbn, accessNo, quantity, dateOfPurchase, remarks);
             if(rows>=1){
                 javax.swing.JOptionPane.showMessageDialog(this, rows+" record added. ");
                 getBookNames();
                 clearActionPerformed(evt);                                      
             }
        }catch(Exception ee){
           ee.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this,"Error: "+ee.getMessage());
        }
    }//GEN-LAST:event_addActionPerformed

    
    private void bookTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookTypeComboBoxActionPerformed
        this.getBookNames();
    }//GEN-LAST:event_bookTypeComboBoxActionPerformed
 
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BooksFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BooksFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BooksFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BooksFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BooksFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accessNo;
    private javax.swing.JTextField accessNoField;
    private javax.swing.JButton add;
    private javax.swing.JLabel adition;
    private javax.swing.JLabel author;
    private javax.swing.JTextField authorField;
    private javax.swing.JButton back;
    private javax.swing.JLabel bookId;
    private javax.swing.JTextField bookIdField;
    private javax.swing.JLabel bookName;
    private javax.swing.JLabel bookName2;
    private javax.swing.JTextField bookNameField;
    private javax.swing.JList bookNameList;
    private javax.swing.JLabel bookNames;
    private javax.swing.JComboBox bookTypeComboBox;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox departmentComboBox;
    private javax.swing.JLabel depts;
    private javax.swing.JTextField editionField;
    private javax.swing.JLabel faculties;
    private javax.swing.JLabel isbn;
    private javax.swing.JTextField isbnField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel price;
    private javax.swing.JTextField priceField;
    private javax.swing.JLabel publisher;
    private javax.swing.JTextField publisherField;
    private javax.swing.JTextField publishingYearField;
    private javax.swing.JLabel purchaseDate;
    private javax.swing.JTextField purchaseDateField;
    private javax.swing.JLabel purchaseFrom;
    private javax.swing.JTextField purchaseFromField;
    private javax.swing.JLabel quantity;
    private javax.swing.JTextField quantityField;
    private javax.swing.JLabel remarks;
    private javax.swing.JTextArea remarksArea;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
