package jframes;
import beanclasses.BookTypeBean;
import dbmanager.DatabaseManager;
import java.awt.*;                  // Toolkit, Dimension
import java.util.*;

/**
 * @author Amjad Jamali
 */
public class BookTypeFrame extends javax.swing.JFrame {
   
    public BookTypeFrame() {
        initComponents();
        Toolkit kit=this.getToolkit();
        Dimension d=kit.getScreenSize();
        setBounds(0,0,d.width, d.height);
        getBookTypes();
    }
    private void getBookTypes(){
        try{
            Vector v = DatabaseManager.getBookTypes();
            this.bookTypesList.setListData(v);
        }catch(Exception e){ e.printStackTrace(); }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        update = new javax.swing.JButton();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTypesList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        remarksArea = new javax.swing.JTextArea();
        bookType = new javax.swing.JLabel();
        bookTypes = new javax.swing.JLabel();
        remarks = new javax.swing.JLabel();
        typeId = new javax.swing.JLabel();
        bookTypeIdField = new javax.swing.JTextField();
        bookTypeField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        update.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(470, 600, 150, 60);

        add.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(310, 600, 150, 60);

        delete.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(790, 600, 150, 60);

        clear.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear);
        clear.setBounds(630, 600, 150, 60);

        back.setFont(new java.awt.Font("Gazzarelli", 1, 24)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(960, 600, 290, 60);

        bookTypesList.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bookTypesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                bookTypesListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(bookTypesList);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(960, 120, 290, 450);

        remarksArea.setColumns(20);
        remarksArea.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        remarksArea.setRows(5);
        jScrollPane2.setViewportView(remarksArea);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(310, 260, 630, 304);

        bookType.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        bookType.setText("Book Type");
        getContentPane().add(bookType);
        bookType.setBounds(310, 170, 130, 28);

        bookTypes.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        bookTypes.setText("Book Types");
        getContentPane().add(bookTypes);
        bookTypes.setBounds(960, 80, 140, 30);

        remarks.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        remarks.setText("Remarks");
        getContentPane().add(remarks);
        remarks.setBounds(310, 230, 130, 28);

        typeId.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        typeId.setText("Book Type ID");
        getContentPane().add(typeId);
        typeId.setBounds(310, 130, 160, 28);

        bookTypeIdField.setEditable(false);
        bookTypeIdField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(bookTypeIdField);
        bookTypeIdField.setBounds(490, 120, 210, 38);

        bookTypeField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        getContentPane().add(bookTypeField);
        bookTypeField.setBounds(490, 170, 452, 37);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        BookTypeBean bean=(BookTypeBean)this.bookTypesList.getSelectedValue();
        if(bean==null)return;
        
        String bookType=this.bookTypeField.getText();
        String remarks=remarksArea.getText();
               
        if(bookType.trim().equals("")){
           javax.swing.JOptionPane.showMessageDialog(this, "Book Type TextField is Empty. ");
           return;        
        }        
        try{        
             int rows=DatabaseManager.updateBookType(bean.getTypeId(),bookType, remarks);
             if(rows>=1){
                 javax.swing.JOptionPane.showMessageDialog(this, rows+" record modified. ");
                 this.getBookTypes();
                 clearActionPerformed(evt);                                      
             }
        }catch(Exception ee){
           ee.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this,"Error: "+ee.getMessage());
        }
    }//GEN-LAST:event_updateActionPerformed

    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String bookType=this.bookTypeField.getText();
        String remarks=remarksArea.getText();
           
        if(bookType.trim().equals("")){
           javax.swing.JOptionPane.showMessageDialog(this, "Book Type TextField is Empty. ");
           return;        
        }
        
        try{
             int rows=DatabaseManager.addBookType(bookType, remarks);
             if(rows>=1){
                 javax.swing.JOptionPane.showMessageDialog(this, rows+" record saved. ");
                 this.getBookTypes();
                 clearActionPerformed(evt);                                      
             }
        }catch(Exception ee){
           ee.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this,"Error: "+ee.getMessage());
        }
    }//GEN-LAST:event_addActionPerformed

    
    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        this.bookTypeIdField.setText("");
        this.bookTypeField.setText("");
        this.remarksArea.setText("");
    }//GEN-LAST:event_clearActionPerformed

    
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.hide();        
    }//GEN-LAST:event_backActionPerformed

    
    private void bookTypesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_bookTypesListValueChanged
        BookTypeBean bean=(BookTypeBean)bookTypesList.getSelectedValue();
        if(bean==null)return;
        
        this.bookTypeIdField.setText(""+bean.getTypeId());
        this.bookTypeField.setText(""+bean.getType());
        this.remarksArea.setText(""+bean.getRemarks());
    }//GEN-LAST:event_bookTypesListValueChanged

    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        BookTypeBean bean=(BookTypeBean)this.bookTypesList.getSelectedValue();
        if(bean==null)return;
        
        try{
            int rows=DatabaseManager.deleteBookType(bean.getTypeId());
            if(rows>=1){
                 javax.swing.JOptionPane.showMessageDialog(this, rows+" record removed. ");
                 this.getBookTypes();
                 clearActionPerformed(evt);                                      
             }
        }catch(Exception ee){
           ee.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this,"Error: "+ee.getMessage());
        }
    }//GEN-LAST:event_deleteActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(
            new Runnable() {
                public void run() {
                    new BookTypeFrame().setVisible(true);
                }
            }
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JLabel bookType;
    private javax.swing.JTextField bookTypeField;
    private javax.swing.JTextField bookTypeIdField;
    private javax.swing.JLabel bookTypes;
    private javax.swing.JList bookTypesList;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel remarks;
    private javax.swing.JTextArea remarksArea;
    private javax.swing.JLabel typeId;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
